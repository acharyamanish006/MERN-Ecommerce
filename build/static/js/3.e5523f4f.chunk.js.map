{"version":3,"file":"static/js/3.e5523f4f.chunk.js","mappings":"uOAQe,SAASA,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAG,eAAnCC,EAAO,KAAEC,EAAU,KAClBC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WAERC,MAAM,+DAAD,OAAgEH,GAAM,CACzEI,YAAa,YAEZC,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,IACxBF,MAAK,SAACG,GACLC,QAAQC,IAAIF,GACZT,EAAWS,EAAKG,iBAIlB,IACCC,OAAM,SAACC,GAAG,OAAKJ,QAAQC,IAAIG,EAAI,GACpC,GAAG,CAACb,IAGJ,IAKIc,EALJ,GAAsCjB,EAAAA,EAAAA,UAAS,GAAE,eAA1CkB,EAAW,KAAEC,EAAc,KAG5BC,EAFc,GAEIF,EAClBG,EAAmBD,EAHL,GAUpB,OAHKH,EADLhB,EAAQqB,OAAS,GACA,EACAC,KAAKC,MAAMvB,EAAQqB,OARhB,IAQwC,GAG1D,gBAAKG,UAAU,mBAAkB,UAC/B,iBAAKA,UAAU,iBAAgB,WAC7B,gBAAKA,UAAU,iBAAgB,UAC7B,0BACG,IACAxB,EAAQqB,OAAO,iBAAenB,EAAG,UAGtC,gBAAKsB,UAAU,oBAAmB,SAC/BxB,EACEyB,KAAI,SAACf,GACJ,OAAO,SAAC,IAAO,CAAgBA,KAAMA,GAAhBA,EAAKgB,IAC5B,IACCC,MAAMP,EAAkBD,MAE7B,SAAC,IAAK,CAACS,QAAS,EAAE,UAChB,SAAC,IAAU,CACTC,MAAOb,EACPc,SAAU,SAACC,EAAOC,GAChBd,EAAec,EACjB,UAMZ,C","sources":["subComponent/Searched_product.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Product from \"../subComponent/Product\";\r\nimport \"../mainComponent/css/Store.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Pagination from \"@mui/material/Pagination\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport default function SearchedProduct() {\r\n  const [product, setProduct] = useState([]);\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    // fetch(`http://localhost:8080/api/v1/get/product/search/${id}`, {\r\n    fetch(`https://graphic-card.onrender.com/api/v1/get/product/search/${id}`, {\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setProduct(data.searched_product);\r\n        // dispatch({\r\n        //   type: \"searchValue\",\r\n        // });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [id]);\r\n\r\n  //pagenation\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const postPerPage = 15;\r\n\r\n  const indexOfLastPost = currentPage * postPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postPerPage;\r\n  let totalPage;\r\n\r\n  product.length < 15\r\n    ? (totalPage = 1)\r\n    : (totalPage = Math.round(product.length / postPerPage) + 1);\r\n\r\n  return (\r\n    <div className=\"productContainer\">\r\n      <div className=\"productWrapper\">\r\n        <div className=\"productHeading\">\r\n          <h3>\r\n            {\" \"}\r\n            {product.length} results for \"{id}\"\r\n          </h3>\r\n        </div>\r\n        <div className=\"productCollection\">\r\n          {product\r\n            .map((data) => {\r\n              return <Product key={data._id} data={data} />;\r\n            })\r\n            .slice(indexOfFirstPost, indexOfLastPost)}\r\n        </div>\r\n        <Stack spacing={2}>\r\n          <Pagination\r\n            count={totalPage}\r\n            onChange={(event, page) => {\r\n              setCurrentPage(page);\r\n            }}\r\n          />\r\n        </Stack>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["SearchedProduct","useState","product","setProduct","id","useParams","useEffect","fetch","credentials","then","res","json","data","console","log","searched_product","catch","err","totalPage","currentPage","setCurrentPage","indexOfLastPost","indexOfFirstPost","length","Math","round","className","map","_id","slice","spacing","count","onChange","event","page"],"sourceRoot":""}